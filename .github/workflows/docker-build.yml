name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'user-service/**'
      - 'cart-service/**'
      - 'order-service/**'
      - 'restaurant-service/**'
      - 'frontend/**'
      - 'nginx/**'
      - 'mongo/**'
      - 'gateway/**'
      - 'eureka-server/**'
      - '.github/workflows/**'
      - 'notification-service/**'

jobs:

  build-mongo:
    name: Build Mongo with Initial Data

    # GitHub Actions 在运行每个 job 时，都会分配一台临时的虚拟机（Runner）
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Mongo image
        uses: docker/build-push-action@v5
        with:
          # 到项目根目录下的 ./mongo/ 文件夹中寻找 Dockerfile，并以此为构建上下文执行 docker build
          context: ./mongo
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-mongo:latest




  build-user-service:
    name: Build User Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend/user-service
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-user-service:latest

  build-cart-service:
    name: Build Cart Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend/cart-service
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-cart-service:latest

  build-order-service:
    name: Build Order Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend/order-service
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-order-service:latest

  build-restaurant-service:
    name: Build Restaurant Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend/restaurant-service
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-restaurant-service:latest


  build-nginx:
    name: Build Nginx with Frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Nginx container
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-nginx:latest


  build-eureka-service:
    name: Build Eureka Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend/eureka-server
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-eureka:latest



  build-gateway-service:
    name: Build Gateway Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: ./gateway
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-gateway:latest

  build-notification-service:
    name: Build Notification Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend/notification-service
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/snapbite-notification-service:latest
