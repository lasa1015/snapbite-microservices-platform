# 配置一个监听 80 端口的 HTTP 服务器
server {
    listen 80;

    # 设置服务器名称（可选，开发环境中无实际用途）
    server_name localhost;

    # ========================
    # 反向代理：用户服务
    # 请求路径以 /api/users/ 开头的，转发到 user-service 容器的 8081 端口
    location /api/users/ {
        proxy_pass http://user-service:8081/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ========================
    # 反向代理：餐厅服务
    location /api/restaurants/ {
        proxy_pass http://restaurant-service:8082/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ========================
    # 反向代理：购物车服务
    location /api/cart/ {
        proxy_pass http://cart-service:8083/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ========================
    # 反向代理：订单服务
    location /api/order/ {
        proxy_pass http://order-service:8084/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ========================
    # 静态文件服务（前端页面）
    # 如果你把前端打包后放进 Nginx，下面这段会让前端页面支持刷新路由
    location / {
        root /usr/share/nginx/html;      # 指定静态资源路径（Docker 容器内）
        index index.html;                # 默认首页文件
        try_files $uri $uri/ /index.html;  # 如果访问不到资源就回退到 index.html（适配 React Router）
    }
}
