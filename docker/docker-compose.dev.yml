services:

  snapbite-mongo:
    image: mongo:latest
    container_name: snapbite-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      # 把 本机上的 mongo-data 文件夹映射为 Mongo 容器内的数据库目录。
      - ./mongo-data:/data/db
    networks:
      - snapbite-net

  #  打包 React 前端代码
  frontend-build:
    image: node:18
    container_name: snapbite-frontend-build
    working_dir: /app
    volumes:
      # 把你项目里的 React 前端源码文件挂到容器的 /app 目录下
      - ../frontend:/app
      #  把你项目下的 nginx/frontend-dist 文件夹挂到容器里的 /output 目录里
      # ./nginx/frontend-dist 本地目录,前端打包完的静态文件都放在这里
      - ./nginx/frontend-dist:/output

    # 容器里执行的命令脚本
    command: >
      sh -c "npm install &&
             npm run build &&
             cp -r dist/* /output"
    networks:
      - snapbite-net


  snapbite-nginx:
    image: nginx:latest
    container_name: snapbite-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/frontend-dist:/usr/share/nginx/html:ro
    depends_on:
      - frontend-build
    networks:
      - snapbite-net


  snapbite-user-service:
    build: ../user-service
    container_name: snapbite-user-service
    ports:
      - "8081:8081"
    env_file:
      - /user-service/.env.dev-docker
    depends_on:
      - snapbite-mongo
    networks:
      - snapbite-net


  snapbite-restaurant-service:
    build: ../restaurant-service
    container_name: snapbite-restaurant-service
    ports:
      - "8082:8082"
    env_file:
      - /restaurant-service/.env.dev-docker
    depends_on:
      - snapbite-mongo
    networks:
      - snapbite-net

  snapbite-cart-service:
    build: ../cart-service
    container_name: snapbite-cart-service
    ports:
      - "8083:8083"
    env_file:
      - /cart-service/.env.dev-docker
    depends_on:
      - snapbite-mongo
    networks:
      - snapbite-net


  snapbite-order-service:
    build: ../order-service
    container_name: snapbite-order-service
    ports:
      - "8084:8084"
    env_file:
      - /order-service/.env.dev-docker
    depends_on:
      - snapbite-mongo
    networks:
      - snapbite-net


networks:
  snapbite-net:
    driver: bridge
