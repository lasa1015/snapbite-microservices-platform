pipeline {
    agent any

    environment {
        // ✅ 设置镜像名和容器名（注意这里是 notification-service）
        IMAGE_NAME = "lasa1015/snapbite-notification-service:latest"
        CONTAINER_NAME = "snapbite-notification-service"
    }

    stages {

        stage('Checkout Code') {
            steps {
                // ✅ 清空 Jenkins 工作区，避免旧文件影响构建
                deleteDir()
                // ✅ 克隆 GitHub 仓库 main 分支代码
                git branch: 'main',
                    url: 'https://github.com/lasa1015/snapbite-microservices-platform.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                // ✅ 进入 notification-service 目录，构建镜像
                dir('backend/notification-service') {
                    sh 'docker build -t $IMAGE_NAME .'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                // ✅ 使用 Jenkins 中配置的 Docker Hub 凭据推送镜像
                withCredentials([
                    usernamePassword(
                        credentialsId: 'docker-username',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DUMMY'
                    ),
                    string(
                        credentialsId: 'docker-password',
                        variable: 'DOCKER_TOKEN'
                    )
                ]) {
                    sh '''
                        echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $IMAGE_NAME
                    '''
                }
            }
        }

        stage('Clean Up Dangling Images') {
            steps {
                // ✅ 清理悬空镜像，避免镜像堆积浪费空间
                sh '''
                    echo "🧼 清理悬空旧镜像..."
                    docker image prune -f
                '''
            }
        }
    }

    post {
        success {
            // ✅ 构建成功后自动触发部署任务，更新所有容器
            build job: 'deploy-snapbite-services'
        }
    }
}
