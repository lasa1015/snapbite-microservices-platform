pipeline {
    agent any

    environment {
        IMAGE_NAME = "lasa1015/snapbite-user-service:latest"
        CONTAINER_NAME = "snapbite-user-service"
    }

    stages {

        stage('Checkout Code') {
            steps {
                deleteDir()
                git branch: 'main',
                    url: 'https://github.com/lasa1015/snapbite-microservices-platform.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('backend/user-service') {        // ✅ 进入正确目录
                    sh 'docker build -t $IMAGE_NAME .'
                }
            }
        }


        stage('Push Docker Image') {
            steps {
                withCredentials([
                    usernamePassword(
                        credentialsId: 'docker-username',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DUMMY'
                    ),
                    string(credentialsId: 'docker-password',
                           variable: 'DOCKER_TOKEN')
                ]) {
                    sh '''
                        echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $IMAGE_NAME
                    '''
                }
            }
        }

        //  新增的部署阶段
        stage('Deploy Container') {
            steps {
                sh '''
                    echo "🚀 Restarting user-service container..."

                    # 停止并删除旧容器（如果存在）
                    docker stop snapbite-user-service || true
                    docker rm snapbite-user-service || true

                    # 启动新容器
                    docker run -d --name snapbite-user-service \
                      -p 8081:8081 \
                      --restart unless-stopped \
                      $IMAGE_NAME
                '''
            }
        }

        stage('Clean Up Dangling Images') {
            steps {
                sh '''
                    echo "🧼 清理悬空旧镜像..."
                    docker image prune -f
                '''
            }
        }

    }



    post {
        success {
            build job: 'deploy-snapbite-services'
        }
    }





}
